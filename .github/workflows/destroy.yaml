name: destroy
on:
  workflow_dispatch: {}
jobs:
  destroy-application:
    name: Deploy Application
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        application: [api, web]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TERRAFORM_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.6

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.19.3

      - name: Application Terraform - ${{ matrix.application }}
        run: |
          cd $GITHUB_WORKSPACE/packages/${{ matrix.application }}/terraform

          aws eks update-kubeconfig --name family-seams-production
          export KUBE_CONFIG_PATH=/home/runner/.kube/config

          terraform init -reconfigure -backend-config="bucket=family-seams-terraform-bucket"

          terraform workspace select production

          terraform destroy -auto-approve

  destroy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: destroy-application
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TERRAFORM_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.6
          
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.19.3

      - name: Initialization Terraform
        run: |
          cd $GITHUB_WORKSPACE/terraform/init
          terraform init
          if ! terraform state show aws_s3_bucket.terraform_bucket > /dev/null 2>&1 && aws s3api get-bucket-versioning --bucket family-seams-terraform-bucket > /dev/null; then
            terraform import aws_s3_bucket.terraform_bucket family-seams-terraform-bucket
          fi
          terraform apply -auto-approve

      - name: Post Kubernetes Terraform
        run: |
          cd $GITHUB_WORKSPACE/terraform/post-kubernetes

          aws eks update-kubeconfig --name family-seams-production
          export KUBE_CONFIG_PATH=/home/runner/.kube/config
          
          terraform init -reconfigure -backend-config="bucket=family-seams-terraform-bucket"

          terraform workspace select production

          terraform destroy -auto-approve

      - name: Environment Terraform
        run: |
          cd $GITHUB_WORKSPACE/terraform/environment

          aws eks update-kubeconfig --name family-seams-production
          export KUBE_CONFIG_PATH=/home/runner/.kube/config
          
          terraform init -reconfigure -backend-config="bucket=family-seams-terraform-bucket"

          terraform workspace select production

          terraform destroy -auto-approve

      - name: Global Terraform
        run: |
          cd $GITHUB_WORKSPACE/terraform/global
          terraform init -reconfigure -backend-config="bucket=family-seams-terraform-bucket"
          terraform destroy -auto-approve

      
