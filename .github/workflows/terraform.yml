name: terraform
on: push
  # push:
  #   branches:
  #     - main
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Setup
        uses: docker/setup-buildx-action@v1

      - name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TERRAFORM_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.6

      - name: Init Terraform
        run: |
          cd $GITHUB_WORKSPACE/terraform/init
          echo '${{ secrets.DOMAIN_CONTACT_TFVARS }}' > contact.tfvars
          terraform init
          if aws s3api get-bucket-versioning --bucket family-seams-terraform-bucket; then
            terraform import aws_s3_bucket.terraform_bucket family-seams-terraform-bucket
          fi
          terraform apply -var-file=contact.tfvars -auto-approve
          cat $GITHUB_WORKSPACE/terraform/init/state/init.tfstate

